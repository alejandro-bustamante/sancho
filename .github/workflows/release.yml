name: Release and Docker Publication
on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
env:
  REGISTRY_GHCR: ghcr.io
  IMAGE_NAME_GHCR: ${{ github.repository }}
  REGISTRY_DOCKERHUB: docker.io
  IMAGE_NAME_DOCKERHUB: alebdc/sancho
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      # --- Authentication ---
      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_GHCR }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: alebdc
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # --- Version and Metadata Extraction ---
      - name: Extract Docker metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY_GHCR }}/${{ env.IMAGE_NAME_GHCR }}
            ${{ env.REGISTRY_DOCKERHUB }}/${{ env.IMAGE_NAME_DOCKERHUB }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable=${{ endsWith(github.ref, 'main') }}
      # --- Build and Push ---
      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: Dockerfile
          build-args: |
            PUBLIC_API_IP=${{ secrets.PUBLIC_API_IP }}
      # --- Create GitHub Release ---
      - name: Extract version for Release
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      - name: Extraer notas de release del CHANGELOG.md
        id: extract_notes
        run: |
          VERSION="${{ steps.get_version.outputs.VERSION }}"
          sed -n "/## \[${VERSION}]/,/## \[/p" CHANGELOG.md | head -n -1 > /tmp/release_body.md
          if [ ! -s /tmp/release_body.md ]; then
            sed -n "/## \[${VERSION}]/,$p" CHANGELOG.md > /tmp/release_body.md
          fi
          if [ ! -s /tmp/release_body.md ]; then
            echo "Error: No se encontr√≥ la entrada '## [${VERSION}]' en CHANGELOG.md."
            echo "::error::Release notes not found for ${VERSION}"
            exit 1
          fi
      - name: Crear GitHub Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          body_path: /tmp/release_body.md
          draft: false
          prerelease: false
